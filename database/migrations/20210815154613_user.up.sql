create table if not exists "public"."user"(
    -- "id"           uuid        not null default gen_random_uuid(),
    "id"           int         not null generated by default as identity(start with 1 increment by 1),
    "username"     citext      not null,
    "password"     text        not null,
    "is_active"    boolean     not null default false,
    "is_staff"     boolean     not null default false,
    "is_superuser" boolean     not null default false,
    "created_at"   timestamptz not null,
    "updated_at"   timestamptz null,
    "deleted_at"   timestamptz null,
    constraint "user_id_pkey"         primary key("id"),
    constraint "user_username_unique" unique("username"),
    constraint "user_username_check"  check((length(("username")::text) >= 2) and (length(("username")::text) <= 16)) -- and ("username" ~ '^[[:alnum:]_]+$'::citext))
);

create index if not exists "user_username"
on "public"."user"(
	"username"
);

create trigger "_timestamps" before insert or update or delete
on "public"."user" for each row
    execute procedure "public"."tg__timestamps"();
