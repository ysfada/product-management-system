create table if not exists "public"."product"(
    -- "id"          uuid          not null default gen_random_uuid(),
    "id"          int           not null generated by default as identity(start with 1 increment by 1),
    "name"        citext        not null,
    "description" citext        null,
    "category_id" int           not null,
    "created_at"  timestamptz   not null,
    "updated_at"  timestamptz   null,
    "deleted_at"  timestamptz   null,
    foreign key("category_id")      references "category"("id") on delete restrict deferrable initially deferred,
    constraint "product_id_pkey"    primary key("id"),
    constraint "product_name_check" check((length(("name")::text) >= 2) and (length(("name")::text) <= 32)) -- and ("name" ~ '^[[:alnum:]_]+$'::citext))
);

create index if not exists "product_name"
on "public"."product"(
	"name"
);

create index if not exists "product_category_id"
on "public"."product"(
	"category_id"
);

create trigger "_timestamps" before insert or update or delete
on "public"."product" for each row
    execute procedure "public"."tg__timestamps"();
