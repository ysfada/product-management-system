create table if not exists "public"."category"(
    -- "id"          uuid        not null default gen_random_uuid(),
    "id"          int         not null generated by default as identity(start with 1 increment by 1),
    "name"        citext      not null,
    "description" citext      null,
    "created_at"  timestamptz not null,
    "updated_at"  timestamptz null,
    "deleted_at"  timestamptz null,
    constraint "category_id_pkey"     primary key("id"),
    constraint "category_name_unique" unique("name"),
    constraint "category_name_check"  check((length(("name")::text) >= 2) and (length(("name")::text) <= 32)) -- and ("name" ~ '^[[:alnum:]_]+$'::citext))
);

create index if not exists "category_name"
on "public"."category"(
	"name"
);

create trigger "_timestamps" before insert or update or delete
on "public"."category" for each row
    execute procedure "public"."tg__timestamps"();

